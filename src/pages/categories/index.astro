---
import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import CategoryCard from "../../components/CategoryCard.astro";

const allPlugins = await getCollection("plugins");
const allCategories = [
  ...new Set(allPlugins.map((plugin) => plugin.data.categories).flat()),
];
const alphabeticalCategories = allCategories.sort((a, b) => {
  return a.localeCompare(b);
});

let groupedWords = alphabeticalCategories.reduce((acc, word) => {
  let firstLetter = word[0].toUpperCase();
  if (!acc[firstLetter]) {
    acc[firstLetter] = [];
  }
  acc[firstLetter].push(word);
  return acc;
}, {});

const categorizedWords = Object.entries(groupedWords).sort((a, b) => a[0].localeCompare(b[0]));

---

<BaseLayout
  title="All Framer Plugins Categories"
  description="Browse all the categories of Framer plugins"
>
  <section class="w-full flex gap-4">
    <div class="flex flex-col md:basis-2/3 gap-4">
      <h1>All Framer Plugins Categories</h1>
      <p class="text-lg">Browse all the categories of Framer plugins.</p>
    </div>
  </section>
  <section>
    <!-- <div class="grid grid-col-1 sm:grid-cols-2 md:grid-cols-3 gap-6 pt-4"> -->
      <!-- {
        alphabeticalCategories.map((category) => (
          <CategoryCard
            link={category}
            category={category.length < 4 ? category.toUpperCase() : category}
          />
        ))
      } -->
      {categorizedWords.map(([letter, words]) => (
        <div class="">
          <h2>{letter}</h2>
          <div class="grid grid-col-1 sm:grid-cols-2 md:grid-cols-3 gap-6 pt-4 mb-16">
            {words.map(word => (
              <CategoryCard
                link={`/${word}`}
                category={word.length < 4 ? word.toUpperCase() : word}
              />
            ))}
          </div>
        </div>
      ))}
    <!-- </div> -->
  </section>
</BaseLayout>

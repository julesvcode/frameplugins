---
import { getCollection } from "astro:content";
import ToolCard from "../components/ToolCard.astro";
import BaseLayout from "../layouts/BaseLayout.astro";
import SearchWidget from "../components/SearchWidget.astro";

const allPlugins = await getCollection("plugins");
---

<BaseLayout
  title="Search plugins"
  description="All the best Framer plugins you need to supercharge your website."
>
  <section class="w-full flex gap-4">
    <div class="flex flex-col md:basis-2/3 gap-4">
      <h1>All Framer plugins</h1>
      <p class="text-lg">
        All the best Framer plugins you need to enhanced your website - from SEO
        to CMS management and design.
      </p>
    </div>
  </section>
  <!-- <SearchWidget /> -->
  <aside class="form">
    <div>
      <div>
          <label for="search">Search plugins</label>
      </div>
      <input 
          type="search" 
          required 
          minlength="2" 
          maxlength="24" 
          name="search" 
          id="search" 
          placeholder="Search for plugins..">
    </div>
  </aside>
  <p id="searchReadout"></p>
  <section aria-label="Search results">
    <span id="searchResults"></span>
    <!-- <div class="grid grid-col-1 sm:grid-cols-2 md:grid-cols-3 gap-6 pt-4">
      {allPlugins.map((plugin) => <ToolCard plugins={plugin} />)}
    </div> -->
  </section>
</BaseLayout>

<script>
  import Fuse from "fuse.js"

  let SEARCH_DATA
  let FUSE_INSTANCE
  const FUSE_OPTIONS = {
    includeScore: true,
    shouldSort: true,
    threshold: 0.5,
    keys: [
      {
        name: "title",
        weight: 1,
      },
      {
        name: "description",
        weight: 0.75,
      }
    ]
  }

  const SPINNER = `<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="#FFFFFF" viewBox="0 0 256 256" id="spinner"><path d="M236,128a108,108,0,0,1-216,0c0-42.52,24.73-81.34,63-98.9A12,12,0,1,1,93,50.91C63.24,64.57,44,94.83,44,128a84,84,0,0,0,168,0c0-33.17-19.24-63.43-49-77.09A12,12,0,1,1,173,29.1C211.27,46.66,236,85.48,236,128Z"></path>
    <style>
      #spinner {
      animation: spin 1s linear infinite;
      }
      @keyframes spin {
      100% {
        transform: rotate(360deg);
      }}
      </style></svg>`

  const search = document.querySelector("#search") as HTMLInputElement
  const searchReadout = document.querySelector("#searchReadout") as HTMLInputElement
  const searchResults = document.querySelector("#searchResults") as HTMLInputElement
  
  function updateDocumentTitle(search) {
    document.title = search
      ? `Search results for "${search}"`
      : "Search pugins"  
  }

  function updateDocumentReadout(search) {
    searchReadout.textContent = search
      ? `Search results for "${search}"`
      : ""  
  }

  async function fetchSearchResults(search) {
    if (search.length === 0) return
    searchResults.innerHTML = SPINNER

    if (!SEARCH_DATA) {
      try {
      const res = await fetch("/search.json")
      if (!res.ok) {
        throw new Error("Something went worng.. please try again")
      }
      const data = await res.json()
      SEARCH_DATA = data
      } catch (error) {
        console.error(error)
      }
    }

    if (SEARCH_DATA && !FUSE_INSTANCE) {
      FUSE_INSTANCE = new Fuse(SEARCH_DATA, FUSE_OPTIONS)
    }

    if (!FUSE_INSTANCE) return
    const searchResult = FUSE_INSTANCE.search(search)
    console.log(searchResult)
  }
  

  window.addEventListener("DOMContentLoaded", () => {
    const urlParams = new URLSearchParams(window.location.search).get("q")
    if (urlParams) {
      fetchSearchResults(urlParams)
      updateDocumentTitle(urlParams)
      updateDocumentReadout(urlParams)
      search.value = urlParams
      search.focus()
    }
  })

  search.addEventListener("input", () => {
    const searchTerm = search.value
    if (searchTerm) {
      updateDocumentTitle(searchTerm)
      updateDocumentReadout(searchTerm)
      fetchSearchResults(searchTerm)
    }
  })
</script>